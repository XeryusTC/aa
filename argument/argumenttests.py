from argument import Argument
from argumentationframework import ArgumentationFramework

arg = Argument()
fw = ArgumentationFramework()

print("===Adding Argument===")
print("Argument name:\t" + str(arg.get_name()))
print("framework size:\t" + str(fw.size()))
print(fw.add_argument(arg))
print("Argument name:\t" + str(arg.get_name()))
print("framework size:\t" + str(fw.size()))
print("fw has argument:\t" + str(fw.has_argument(arg)))
print("fw has random argument:\t" + str(fw.has_argument(Argument())))
print("===")
print("Argument is admissable:\t" + str(fw.is_admissable(arg)))
arg2 = Argument()
arg3 = Argument()
arg4 = Argument()
arg5 = Argument()
fw.add_argument(arg2)
print("Argument 1 Justified:\t" + str(fw.is_admissable(arg)))
print("Argument 2 Justified:\t" + str(fw.is_admissable(arg2)))
fw.add_attack(arg, arg2)
print("arg1 => arg2")
print("Argument 1 Justified:\t" + str(fw.is_admissable(arg)))
print("Argument 2 Justified:\t" + str(fw.is_admissable(arg2)))
fw.add_attack(arg3, arg)
print("arg3 => arg1")
print("Argument 1 Justified:\t" + str(fw.is_admissable(arg)))
print("Argument 2 Justified:\t" + str(fw.is_admissable(arg2)))
fw.add_attack(arg4, arg2)
print("arg4 => arg2")
print("Argument 1 Justified:\t" + str(fw.is_admissable(arg)))
print("Argument 2 Justified:\t" + str(fw.is_admissable(arg2)))
fw.add_attack(arg5, arg3)
print("arg5 => arg3")
print("Argument 1 Justified:\t" + str(fw.is_admissable(arg)))
print("Argument 2 Justified:\t" + str(fw.is_admissable(arg2)))
for arg in fw.get_admissable():
    print(arg.get_name())
print("Removing 5")
fw.remove_argument(arg5)
for arg in fw.get_admissable():
    print(arg.get_name())
print("arg4 =/=> arg2")
fw.remove_attack(arg4, arg2)
for arg in fw.get_admissable():
    print(arg.get_name())
